<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder
		location="classpath:applicationContext.properties" />

	<!--<context:property-placeholder location="classpath:applicationContextJUnit.properties" 
		/> -->
	<bean id="hsqlDb" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="${dbUrl}" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>


	<bean id="hibernateSessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="hsqlDb" />
		<property name="configurationClass" value="pl.jw.mbank.biz.system.DbConfiguration" />
		<property name="schemaUpdate" value="true" />
		<property name="hibernateProperties">
			<value>hibernate.dialect=org.hibernate.dialect.HSQLDialect</value>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="hibernateSessionFactory" />
		</property>
		<property name="dataSource">
			<ref local="hsqlDb" />
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="hibernateSessionFactory" />
		</property>
	</bean>



	<bean id="investmentDao" class="pl.jw.mbank.biz.Investment">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
	</bean>

	<bean id="sfiDao" class="pl.jw.mbank.biz.Sfi">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
	</bean>

	<bean id="stockQuotesDao" class="pl.jw.mbank.biz.StockQuotes">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
	</bean>


	<bean id="presentationDao" class="pl.jw.mbank.biz.Presentation">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
		<property name="sfi">
			<ref bean="sfiDao" />
		</property>
		<property name="stockQuotes">
			<ref bean="stockQuotesDao" />
		</property>

	</bean>
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="add*" propagation="REQUIRES_NEW" /> <tx:method 
		name="update*" propagation="REQUIRES_NEW" /> <tx:method name="get*" read-only="true" 
		propagation="SUPPORTS" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut 
		id="bizMethods" expression="execution(* pl.jw.mbank.common.request.*.*(..))" 
		/> <aop:advisor pointcut-ref="bizMethods" advice-ref="txAdvice" /> </aop:config> -->

	<!-- <bean id="presentationTransactionManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
		<property name="transactionManager"> <ref local="transactionManager" /> </property> 
		<property name="target"> <ref local="presentationDao" /> </property> <property 
		name="transactionAttributes"> <props> <prop key="update*">PROPAGATION_REQUIRES_NEW</prop> 
		<prop key="*">PROPAGATION_NEVER,readOnly</prop> </props> </property> </bean> 
		<bean id="sfiTransactionManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
		<property name="transactionManager"> <ref local="transactionManager" /> </property> 
		<property name="target"> <ref local="sfiDao" /> </property> <property name="transactionAttributes"> 
		<props> <prop key="add*">PROPAGATION_MANDATORY</prop> <prop key="update*">PROPAGATION_MANDATORY</prop> 
		<prop key="*">PROPAGATION_NEVER,readOnly</prop> </props> </property> </bean> 
		<bean id="investmentTransactionManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
		<property name="transactionManager"> <ref local="transactionManager" /> </property> 
		<property name="target"> <ref local="investmentDao" /> </property> <property 
		name="transactionAttributes"> <props> <prop key="add*">PROPAGATION_MANDATORY</prop> 
		<prop key="update*">PROPAGATION_MANDATORY</prop> <prop key="*">PROPAGATION_NEVER,readOnly</prop> 
		</props> </property> </bean> <bean id="stockQuotesDaoTransactionManager" 
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
		<property name="transactionManager"> <ref local="transactionManager" /> </property> 
		<property name="target"> <ref local="stockQuotesDao" /> </property> <property 
		name="transactionAttributes"> <props> <prop key="add*">PROPAGATION_MANDATORY</prop> 
		<prop key="update*">PROPAGATION_MANDATORY</prop> <prop key="*">PROPAGATION_NEVER,readOnly</prop> 
		</props> </property> </bean> -->



</beans>
